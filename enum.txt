C
#define SPRING   0
#define SUMMER   1
#define FALL     2
#define WINTER   3

+
explicit clé + valeur
-
redondant #define
doit definir une valeur
pas vraiment enum



C++/Objective C/C#
enum SEASON { SPRING = 0, SUMMER = 1, FALL = 2, WINTER = 3} ;

+
nommé
assigné un type
possibilité d'assigner des valeurs différents du défaut
-
curly brackets (problème avec Nit)
; à la fin

~
Plus "universel" par rapport à Nit


Ruby
class Color
  BLUE=1
  RED=2
  GREEN=3
  YELLOW=4
  ORANGE=5
  PURPLE=6
end

+
compact / court
possibilité d'assigner des valeurs différents du défaut
-
Hack, pas un vrai enum


~
Plus "classe" par rapport à Nit

Python (old)
from enum import Enum
Animal = Enum('Animal', 'ant bee cat dog')
+
-
lisibilité (trop compact)
Devoir import Enum à chaque fois
~
Plus "classe" par rapport à Nit



Python(new)
from enum import Enum
class Color(Enum):
	blue = 1
	red = 2
	green = 3
	yellow = 4
	orange = 5
	purple = 6

+
tres lisible

-

~
Plus "classe" par rapport à Nit


Java
public enum Day {
    SUNDAY = 0, MONDAY, TUESDAY, WEDNESDAY,
    THURSDAY, FRIDAY, SATURDAY 
}



Delphi
 type
   TDay = (Mon=1, Tue, Wed, Thu, Fri, Sat, Sun);   // Enumeration values
 var
   day   : TDay;          // Enumeration variable







enum = enum string '{' (string ('=' string)? ',')* string ('=' string)? '}' string ';'




enum Color
	BLUE=1
	RED=2
	GREEN=3
	YELLOW=4	
	ORANGE=5
	PURPLE=6
end
	


color = enum
	BLUE=1
	RED=2
	GREEN=3
	YELLOW=4	
	ORANGE=5
	PURPLE=6
end
